import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.IntStream;

public class Pair {

	public static void main(String[] args) {
		Map<Integer,String> m = new HashMap<Integer, String>();
		
		int[] a = {1,2,1,2,4,5,6};
		for (int i : a) {
			int temp = a[0];
			a = removeTheElement(a,0);
			
			Object[] o = p(a,temp,m);
		}
		
	}

	private static Object[] p(int[] a, int n, Map r) {
		Object[] o = new Object[2];
		o[0] = a;
		
		boolean contains = IntStream.of(a).anyMatch(x -> x == n);
		if (contains) {
			int idx = indexOfFirstOne(a,n);
			int[]a_new = removeTheElement(a,idx);
			
			o[0] = a_new;
			r.put(n, "");
		}
		o[1] = r;
		
		return o;
	}
	
	private static int indexOfFirstOne(int arr[], int n) { 
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == n) {
                return i; 
            }
        }

        return -1; 
    } 

	private static int[] removeTheElement(int[] arr, int index) {

		if (arr == null || index < 0 || index >= arr.length) {

			return arr;
		}

		int[] anotherArray = new int[arr.length - 1];

		for (int i = 0, k = 0; i < arr.length; i++) {
			if (i == index) {
				continue;
			}
			anotherArray[k++] = arr[i];
		}

		return anotherArray;
	}

}
